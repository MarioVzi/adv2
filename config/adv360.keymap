/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    macros {
        taskmanager: taskmanager {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk LEFT_WIN &kp R>;
            label = "TASKMANAGER";
        };
        test: test {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(I) &kp C &kp H>;
            label = "TEST";
        };
        alttab: alttab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk LEFT_ALT &kp TAB>;
            label = "ALTTAB";
        };
        leftBracket: leftBracket {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(LC(N8))>;
            label = "LEFTBRACKET";
        };
        rightBracket: rightBracket {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LA(N9))>;
            label = "RIGHTBRACKET";
        };
    };

    combos {
        compatible = "zmk,combos";

        taskmanager {
            bindings = <&taskmanager>;
            key-positions = <32 41>;
        };

        leftBracket {
            bindings = <&leftBracket>;
            key-positions = <46 73>;
        };

        rightBracket {
            bindings = <&rightBracket>;
            key-positions = <46 74>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESCAPE      &kp N1  &kp N2     &kp N3    &kp N4     &kp N5  &tog 1                                                                               &mo 3      &kp N6  &kp N7        &kp N8     &kp N9          &kp N0            &kp MINUS
&kp TAB         &kp Q   &kp W      &kp E     &kp R      &kp T   &mo 3                                                                                &mo 3      &kp Y   &kp U         &kp I      &kp O           &kp P             &kp NON_US_BACKSLASH
&kp LEFT_ALT    &kp A   &kp S      &kp D     &kp F      &kp G   &mo 2          &kp LEFT_CONTROL  &kp LEFT_ALT      &kp RIGHT_WIN  &kp RIGHT_CONTROL  &mo 2      &kp H   &kp J         &kp K      &kp L           &kp LEFT_BRACE    &kp RIGHT_BRACE
&kp LEFT_SHIFT  &kp Z   &kp X      &kp C     &kp V      &kp B                                    &kp B             &kp HOME                                     &kp N   &kp M         &kp COMMA  &kp DOT         &kp LEFT_BRACKET  &kp RIGHT_SHIFT
&mo 2           &mo 2   &kp GRAVE  &kp LEFT  &kp RIGHT          &kp BACKSPACE  &kp BSPC          &kp DEL           &kp END        &kp ENTER          &kp SPACE          &kp UP_ARROW  &kp DOWN   &kp LC(LA(N7))  &kp LC(LA(N0))    &mo 2
            >;
        };

        layer_keypad {
            bindings = <
&kp EQUAL  &kp N1     &kp N2    &kp N3    &kp N4     &kp N5  &trans                                                   &mo 3      &kp N6  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
&kp TAB    &kp Q      &kp W     &kp E     &kp R      &kp T   &none                                                    &none      &kp Y   &kp KP_N7   &kp KP_N8     &kp KP_N9      &kp KP_MINUS     &kp BSLH
&kp ESC    &kp A      &kp S     &kp D     &kp F      &kp G   &none     &kp LCTRL  &kp LALT      &kp LGUI   &kp RCTRL  &none      &kp H   &kp KP_N4   &kp KP_N5     &kp KP_N6      &kp KP_PLUS      &kp SQT
&kp LSHFT  &kp Z      &kp X     &kp C     &kp V      &kp B                        &kp HOME      &kp PG_UP                        &kp N   &kp KP_N1   &kp KP_N2     &kp KP_N3      &kp KP_ENTER     &kp RSHFT
&mo 2      &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT          &kp BSPC  &kp DEL    &kp END       &kp PG_DN  &kp ENTER  &kp KP_N0          &kp UP      &kp DOWN      &kp KP_DOT     &kp RBKT         &mo 2
            >;
        };

        layer_fn {
            bindings = <
&kp F1  &kp F1         &kp F2     &kp F3  &kp F4  &kp F5  &tog 1                                      &mo 3   &kp F6  &kp F7            &kp F8           &kp F9            &kp F10  &kp F11
&trans  &kp LC(LA(Q))  &trans     &trans  &trans  &trans  &none                                       &none   &trans  &kp LEFT_BRACKET  &trans           &kp SEMICOLON     &trans   &kp F12
&trans  &kp SQT        &kp MINUS  &trans  &trans  &trans  &none   &trans  &trans      &trans  &trans  &none   &trans  &kp LEFT_BRACE    &kp RIGHT_BRACE  &trans            &trans   &trans
&trans  &trans         &trans     &trans  &trans  &trans                  &trans      &trans                  &trans  &trans            &kp LESS_THAN    &kp GREATER_THAN  &trans   &trans
&trans  &trans         &trans     &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans          &trans            &kp LEFT_BRACE   &kp RIGHT_BRACE   &trans   &trans
            >;
        };

        layer_mod {
            bindings = <
&none  &kp EXCLAMATION  &kp LA(LC(Q))  &kp NON_US_HASH  &kp LS(N4)  &kp LS(N5)  &none                                                  &trans                  &kp GRAVE  &kp LS(NUMBER_6)  &kp LS(RIGHT_BRACKET)  &none  &none  &none
&none  &none            &none          &none            &none       &none       &bootloader                                            &bootloader             &none      &none             &none                  &none  &none  &none
&none  &none            &none          &none            &none       &none       &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none      &none             &none                  &none  &none  &none
&none  &none            &none          &none            &none       &none                           &none      &none                                           &none      &none             &none                  &none  &none  &none
&none  &none            &none          &none            &none                   &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                    &bl BL_INC        &bl BL_DEC             &none  &none  &none
            >;
        };
    };
};
